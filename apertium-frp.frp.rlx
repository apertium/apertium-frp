DELIMITERS = "<.>" "<!>" "<?>" "<..>" "<...>" "<¶>" ;
SOFT-DELIMITERS = "<,>" ;
#OPTIONS += no-inline-sets no-inline-templates ;
OPTIONS += no-inline-templates ;
SUBREADINGS = LTR ; # Alternate, left-to-right (main reading on the left)

SETS

LIST BOS = >>> ;
LIST EOS = <<< ;

LIST Verb = vblex vbser vbhaver vbmod ;
LIST V = vblex ;
LIST Pron = prn ;
LIST Haver = vbhaver ;
LIST Ser = vbser ;
LIST Vbmod = vbmod ;
LIST Cm = cm ;
LIST Sent = sent ;
LIST Det = det ;
LIST Def = def ;
LIST Pos = pos ;
LIST Prep = pr ;
LIST Subj = subj ;
LIST Prop = np ;
LIST A = adj ;
LIST Adv = adv ;
LIST PreAdv = preadv ;
LIST PreDet = predet ;
LIST CnjAdv = cnjadv ;
LIST CnjCoo = cnjcoo ;
LIST CnjSub = cnjsub ;
LIST Num = num ;
LIST Itg = itg ;
LIST Pro = pro ;
LIST Enc = enc ;
LIST Tn = tn ;
LIST Prn = prn ;
LIST N = n ;
LIST NP = np ;
LIST Top = top ;
LIST Ant = ant ;
LIST Cog = Cog ;

LIST Fin = pri prs pii ifi pis cni imp ;
LIST Ind = pri pii ifi ;
LIST Subjunc = prs pis ;
LIST Imper = imp ;
LIST Ifi = ifi ;
LIST Pri = pri ;
LIST Pii = pii ;
LIST Prs = prs ;
LIST Pis = pis ;
LIST Cni = cni ;
LIST Inf = inf ;
LIST Ger = ger ;
LIST PP = pp ;

LIST Interr = itg ;
LIST Rel = rel ;
LIST Interj = ij ;

SET Cnj_Rel = CnjCoo OR CnjSub OR CnjAdv OR Rel ;

LIST Masc_strict = m ;
LIST Fem_strict = f ;
LIST Masc = m mf ;
LIST Fem = f mf ;
LIST MascFem = mf ;
LIST Sg_strict = sg ;
LIST Pl_strict = pl ;
LIST Sg = sg sp ;
LIST Pl = pl sp ;
LIST SgPl = sp ;

SET MascSg = (m sg) OR (m sp) OR (mf sg) OR (mf sp) ;
SET MascPl = (m pl) OR (m sp) OR (mf pl) OR (mf sp) ;
SET FemSg = (f sg) OR (f sp) OR (mf sg) OR (mf sp) ;
SET FemPl = (f pl) OR (f sp) OR (mf pl) OR (mf sp) ;

SET NotMasc = Fem | MascFem ;
SET NotFem = Masc | MascFem ;
SET Gender = NotMasc | NotFem ;

SET NotSg = Pl | SgPl ;
SET NotPl = Sg | SgPl ;
SET Number = NotSg | NotPl ;

SET GenderNumber = MascSg | MascPl | FemSg | FemPl ;

LIST P1 = p1 ;
LIST P2 = p2 ;
LIST P3 = p3 ;
LIST Pers = p1 p2 p3 ;
LIST Sg1 = (p1 sg) ;
LIST Sg2 = (p2 sg) ;
LIST Sg3 = (p3 sg) ;
LIST Pl1 = (p1 pl) ;
LIST Pl2 = (p2 pl) ;
LIST Pl3 = (p3 pl) ;
LIST VSg1 = (vblex p1 sg) (vbser p1 sg) (vbhaver p1 sg) (vbmod p1 sg);
LIST VSg2 = (vblex p2 sg) (vbser p2 sg) (vbhaver p2 sg) (vbmod p2 sg);
LIST VSg3 = (vblex p3 sg) (vbser p3 sg) (vbhaver p3 sg) (vbmod p3 sg);
LIST VPl1 = (vblex p1 pl) (vbser p1 pl) (vbhaver p1 pl) (vbmod p1 pl);
LIST VPl2 = (vblex p2 pl) (vbser p2 pl) (vbhaver p2 pl) (vbmod p2 pl);
LIST VPl3 = (vblex p3 pl) (vbser p3 pl) (vbhaver p3 pl) (vbmod p3 pl);

SET CM = (cm) OR (lpar) OR (rpar) OR ("<;>") ;
LIST Excl = "!" ;

SET Noun_Adj = N OR A ;
SET Noun_Adj_PP = N OR A OR PP ;
SET Adj_PP = A OR PP ;
SET Adv_PreAdv = Adv OR PreAdv ;
SET Cnj_Rel = CnjCoo OR CnjSub OR CnjAdv OR Rel ;
SET Cnj_Rel_End = BOS OR CnjCoo OR CnjSub OR CnjAdv OR Rel OR Inf ;
SET Cnj_Rel_End_NoInf = BOS OR CnjCoo OR CnjSub OR CnjAdv OR Rel ;

LIST unknown = ("\\*.*"r) ;
LIST unknownMajIni = ("\\*[A-ZÀÁÈÉíÒÓÚÜÇ].*"r) ;
LIST MajIni = ("\\<[A-ZÀÁÈÉíÒÓÚÜÇ].*\\>"r) ;

# verbes Vblex que typiquement impliquen subjonctif
SET VerbSubj = ("vouloir") OR ("désirer") OR ("proposer") OR ("plaire") OR ("exiger") OR ("réclamer") OR ("demander") OR ("espérer") ;
# verbes Vblex que typiquement impliquen indicatif
SET VerbInd = ("dire") OR ("annoncer") OR ("penser") OR ("croire") ;
# verbes qui peuvent avoir un attribut
SET VerbAttr = Ser OR ("sembler") OR ("paraître") OR ("paraitre") ;

LIST Je = "je" ;
LIST Te = "te" ;
LIST Il = "il" ;
LIST On = "on" ;

LIST Que = "que" ;

SECTION

# mots individuels

SELECT Prep IF (0 ("devant")) (1 Det + &&GenderNumber) (2 N + &&GenderNumber) ;	# devant la mêson
SELECT Prep IF (0 ("devant")) (1 Det + &&GenderNumber) (2 A + &&GenderNumber) ;	# devant la granta mêson
SELECT Prep IF (0 ("devant")) (1 Num + &&Gender) (2 N + &&Gender + Pl ) ;
SELECT Prep IF (0 ("devant")) (1 Num + &&Gender) (2 A + &&Gender + Pl ) ;

SELECT Ser IF (0 ("savêr")) ;		# FIXME

# det / prn

SELECT Det + &&GenderNumber IF (0 Tn OR Pro OR Det + &&GenderNumber) (1 N + &&GenderNumber) ;	# ceti bruit, l'hotâl
SELECT Det + &&GenderNumber IF (0 Tn OR Pro OR Det + &&GenderNumber) (1 NP + &&GenderNumber) ;

# tn / pro

REMOVE Pro IF (-1 Prep) (0 Pro) (NOT 1 Inf) ;		# por tè / por tè chantar

REMOVE Tn IF (-1 Tn) (0 Tn) (1 Verb + Pers) ;		# je tè chanto
REMOVE Tn IF (0C Pro OR Tn) (1 unknown) ;		# tè xxxx

SELECT Tn IF (NOT -1 Tn) (0 Tn + Sg1) (1 Verb + Sg1) ;
SELECT Tn IF (NOT -1 Tn) (0 Tn + Sg2) (1 Verb + Sg2) ;
SELECT Tn IF (NOT -1 Tn) (0 Tn + Sg3) (1 Verb + Sg3) ;
SELECT Tn IF (NOT -1 Tn) (0 Tn + Pl1) (1 Verb + Pl1) ;	# nos ens avu
SELECT Tn IF (NOT -1 Tn) (0 Tn + Pl2) (1 Verb + Pl2) ;	# vos éd avu
SELECT Tn IF (NOT -1 Tn) (0 Tn + Pl3) (1 Verb + Pl3) ;
SELECT Tn IF (0 Tn + Sg1) (1 Pro) (2 Verb + Sg1) ;
SELECT Tn IF (0 Tn + Sg2) (1 Pro) (2 Verb + Sg2) ;
SELECT Tn IF (0 Tn + Sg3) (1 Pro) (2 Verb + Sg3) ;
SELECT Tn IF (0 Tn + Pl1) (1 Pro) (2 Verb + Pl1) ;	# nos lor ens chantâ
SELECT Tn IF (0 Tn + Pl2) (1 Pro) (2 Verb + Pl2) ;	# vos lor éd chantâ
SELECT Tn IF (0 Tn + Pl3) (1 Pro) (2 Verb + Pl3) ;

REMOVE Tn + Sg1 IF (0 Tn + Sg1) (NOT 1 Verb + Sg1) ;
REMOVE Tn + Sg2 IF (0 Tn + Sg2) (NOT 1 Verb + Sg2) ;	# t'é trovâ
REMOVE Tn + Sg3 IF (0 Tn + Sg3) (NOT 1 Verb + Sg3) ;
REMOVE Tn + Pl1 IF (0 Tn + Pl1) (NOT 1 Verb + Pl1) ;
REMOVE Tn + Pl2 IF (0 Tn + Pl2) (NOT 1 Verb + Pl2) ;
REMOVE Tn + Pl3 IF (0 Tn + Pl3) (NOT 1 Verb + Pl3) ;

SELECT Tn IF (0 Pro) ;			# FIXME

#
# Verbes
#

# personne

SELECT P1 IF (-1 Je) (0 VSg1);
  ## Je veux
SELECT P1 IF (-2 Je) (-1 Pro) (0 VSg1);
  ## Je lui veux
SELECT P1 IF (-3 Je) (-2 Pro) (-1 Pro) (0 VSg1);
  ## Je lui en veux
REMOVE P1 + Sg IF (NOT -1* Je) (0 Verb + P1 + Sg) ;

SELECT P2 IF (-1 Te) (0 VSg2);
  ## Tu veux
SELECT P2 IF (1 Te) (0 VSg2);
  ## Veux-tu
SELECT P2 IF (-2 Te) (-1 Pro) (0 VSg2);
  ## Tu lui veux
SELECT P2 IF (-3 Te) (-2 Pro) (-1 Pro) (0 VSg2);
  ## Tu lui en veux
REMOVE P2 + Sg IF (NOT -1* Te) (0 Verb + P2 + Sg) (NOT 0 Verb + P2 + Sg + Imper) ;

SELECT P3 IF (-1 Il + Sg OR On) (0 VSg3);
  ## Elle parle
SELECT P3 IF (1 Il + Sg OR On) (0 VSg3);
  ## Parle-t-elle
SELECT P3 IF (-2 Il + Sg OR On) (-1 Pro) (0 VSg3);
  ## Elle lui parle
SELECT P3 IF (-3 Il + Sg OR On) (-2 Pro) (-1 Pro) (0 VSg3);
  ## Elle lui en parle

# temps verbaux

REMOVE Imper IF (NOT 1* Excl) ;
#REMOVE Imper IF (-1 Tn) (NOT -1 Lui) ;
#REMOVE Imper IF (-2 Tn) (NOT -2 Lui) (-1 Adv) ;

REMOVE Imper IF (-1 Ant OR Cog OR unknown) (0 P3) ;
REMOVE Imper IF (-2 Ant OR Cog OR unknown) (-1 Adv OR Pro) (0 P3) ;
REMOVE Imper IF (-3 Ant OR Cog OR unknown) (-2 Adv) (-1 Pro) (0 P3) ;

SELECT Imper IF (-1 BOS) (1 Excl) ;
#SELECT Imper IF (-2 BOS) (-1 Ne) (1 Adv OR Rien) (2 Excl) ;
#SELECT Imper IF (-3 BOS) (-2 Ne) (-1 Pro) (1 Adv OR Rien) (2 Excl) ;

REMOVE Subjunc (*-1 Que BARRIER Cnj_Rel_End) (*-1 VerbInd LINK NOT 1 Inf) (0C Verb) (0 Pri) ;
REMOVE Subjunc (NOT -1* Que) (0C Verb) (0 Pri) ;	# VERIFY

# Resources:
# http://visl.sdu.dk/cg3.html
# http://groups.google.com/group/constraint-grammar
# http://kevindonnelly.org.uk/2010/05/constraint-grammar-tutorial/
# http://wiki.apertium.org/wiki/Constraint_Grammar
# http://wiki.apertium.org/wiki/Apertium_and_Constraint_Grammar
